{
  "files": [
    "certora/harnesses/abstractContracts/AssetTransfersHarness.sol",
    "certora/helpers/DummyERC20A.sol",
    "certora/helpers/DummyERC20B.sol",
    "certora/helpers/Type.sol",
    "lib/ethereum-vault-connector/src/EthereumVaultConnector.sol",
  ],
    "link": [
    "AssetTransfersHarness:evc=EthereumVaultConnector",
  ],
  "verify": "AssetTransfersHarness:certora/specs/abstractContracts/AssetTransfer.spec",
  "rule_sanity": "basic",
  "packages": [
      "ethereum-vault-connector=lib/ethereum-vault-connector/src",
      "forge-std=lib/forge-std/src"
  ],
  "parametric_contracts": ["AssetTransfersHarness"],
  "build_cache": true,
  // Performance tuning options below this line
  //"solc_via_ir": true,
  "solc_optimize": "10000",
  "optimistic_loop": true, 
  "loop_iter": "2",
	"prover_args": [
		"-smt_nonLinearArithmetic true",
		"-adaptiveSolverConfig false",
		"-solvers [cvc5:nonlin{randomSeed=1},cvc5:nonlin{randomSeed=2},cvc5:nonlin{randomSeed=3},cvc5:nonlin{randomSeed=4},cvc5:nonlin{randomSeed=5},cvc5:nonlin{randomSeed=6},cvc5:nonlin{randomSeed=7},cvc5:nonlin{randomSeed=8},cvc5:nonlin{randomSeed=9},cvc5:nonlin{randomSeed=10}]",
		"-depth 0"
	],
  "msg": "pushAssetsIntegrity (AssetTransfersHarness)",
  "rule":["pushAssetsIntegrity"]
}
