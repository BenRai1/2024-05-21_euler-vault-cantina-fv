{
  "files": [
    "certora/harnesses/modules/VaultHarness.sol",
    "certora/helpers/DummyERC20A.sol",
    "certora/helpers/DummyERC20B.sol",
    "certora/helpers/Type.sol",
    "lib/ethereum-vault-connector/src/EthereumVaultConnector.sol",
  ],
  "link": [
    "VaultHarness:evc=EthereumVaultConnector",
  ],
  "verify": "VaultHarness:certora/specs/Vault_no_summaries_revert.spec",
  "rule_sanity": "basic",
  "packages": [
      "ethereum-vault-connector=lib/ethereum-vault-connector/src",
      "forge-std=lib/forge-std/src"
  ],
  "parametric_contracts": ["VaultHarness"],
  "build_cache": true,
  // Performance tuning options below this line
  "solc_via_ir": true,
  "solc_optimize": "10000",
  "optimistic_loop": true, 
  "loop_iter": "2",
  "smt_timeout": "7200",
	"prover_args": [
		"-smt_nonLinearArithmetic true",
		"-adaptiveSolverConfig false",
		"-solvers [cvc5:nonlin{randomSeed=1},cvc5:nonlin{randomSeed=2},cvc5:nonlin{randomSeed=3},cvc5:nonlin{randomSeed=4},cvc5:nonlin{randomSeed=5},cvc5:nonlin{randomSeed=6},cvc5:nonlin{randomSeed=7},cvc5:nonlin{randomSeed=8},cvc5:nonlin{randomSeed=9},cvc5:nonlin{randomSeed=10}]",
		"-splitParallel true", 
    "-mediumTimeout 30",
    "-depth 5"
	],
  // mutation options
  "mutations": {
    "gambit": [
      { // use this to add automatic mutations to test your spec
        "filename" : "src/EVault/modules/Vault.sol",
        "num_mutants": 5
      }
    ],
    "manual_mutants": [
      {
        "file_to_mutate": "src/EVault/modules/Vault.sol",
        "mutants_location": "certora/mutations/Vault",
      },
      {
        "file_to_mutate": "src/EVault/shared/BalanceUtils.sol",
        "mutants_location": "certora/mutations/BalanceUtils",
      },
      {
        "file_to_mutate": "src/EVault/shared/AssetTransfers.sol",
        "mutants_location": "certora/mutations/AssetTransfers",
      }
    ]
  },
  "rule":["depositReverts", "mintReverts", "redeemReverts", "skimReverts", "transferReverts" ],
  "msg": "All rules (Vault_no_summaries_reverts)"
}
